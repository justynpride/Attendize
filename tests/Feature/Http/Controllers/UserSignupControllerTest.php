<?php

namespace Tests\Feature\Http\Controllers;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

/**
 * @see \App\Http\Controllers\UserSignupController
 */
class UserSignupControllerTest extends TestCase
{
    use RefreshDatabase;

    /**
     * @test
     */
    public function confirm_email_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $user = factory(\App\Models\User::class)->create();

        $response = $this->get(route('confirmEmail', ['confirmation_code' => $confirmation_code]));

        $response->assertOk();
        $response->assertViewIs('Public.Errors.Generic');
        $response->assertViewHas('message');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function post_signup_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post('signup', [
            // TODO: send request data
        ]);

        $response->assertRedirect('login');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function show_signup_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('showSignup'));

        $response->assertOk();
        $response->assertViewIs('Public.LoginAndRegister.Signup');
        $response->assertViewHas('is_attendize');

        // TODO: perform additional assertions
    }

    // test cases...
}
